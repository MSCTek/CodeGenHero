// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace MSC.BingoBuzz.Repository.Entities.BB
{

    // MeetingSchedule
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class MeetingScheduleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MeetingSchedule>
    {
        public MeetingScheduleConfiguration()
            : this("dbo")
        {
        }

        public MeetingScheduleConfiguration(string schema)
        {
            ToTable("MeetingSchedule", schema);
            HasKey(x => x.MeetingScheduleId);

            Property(x => x.MeetingScheduleId).HasColumnName(@"MeetingScheduleId").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MeetingId).HasColumnName(@"MeetingId").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime2").IsOptional();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime2").IsOptional();
            Property(x => x.RecurrenceRuleId).HasColumnName(@"RecurrenceRuleId").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.CreatedUserId).HasColumnName(@"CreatedUserId").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.UpdatedUserId).HasColumnName(@"UpdatedUserId").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasOptional(a => a.Meeting).WithMany(b => b.MeetingSchedules).HasForeignKey(c => c.MeetingId).WillCascadeOnDelete(false); // FK_MeetingSchedule_Meeting
            HasOptional(a => a.RecurrenceRule).WithMany(b => b.MeetingSchedules).HasForeignKey(c => c.RecurrenceRuleId).WillCascadeOnDelete(false); // FK_MeetingSchedule_RecurrenceRule
            HasRequired(a => a.CreatedUser).WithMany(b => b.MeetingSchedules_CreatedUserId).HasForeignKey(c => c.CreatedUserId).WillCascadeOnDelete(false); // FK_MeetingSchedule_User_Created
            HasRequired(a => a.UpdatedUser).WithMany(b => b.MeetingSchedules_UpdatedUserId).HasForeignKey(c => c.UpdatedUserId).WillCascadeOnDelete(false); // FK_MeetingSchedule_User_Updated
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
