// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace MSC.BingoBuzz.Repository.Entities.BB
{

    public partial interface IBBDataContext : System.IDisposable
    {
        System.Data.Entity.DbSet<BingoContent> BingoContents { get; set; } // BingoContent
        System.Data.Entity.DbSet<BingoInstance> BingoInstances { get; set; } // BingoInstance
        System.Data.Entity.DbSet<BingoInstanceContent> BingoInstanceContents { get; set; } // BingoInstanceContent
        System.Data.Entity.DbSet<BingoInstanceEvent> BingoInstanceEvents { get; set; } // BingoInstanceEvent
        System.Data.Entity.DbSet<BingoInstanceEventType> BingoInstanceEventTypes { get; set; } // BingoInstanceEventType
        System.Data.Entity.DbSet<Company> Companies { get; set; } // Company
        System.Data.Entity.DbSet<FrequencyType> FrequencyTypes { get; set; } // FrequencyType
        System.Data.Entity.DbSet<Meeting> Meetings { get; set; } // Meeting
        System.Data.Entity.DbSet<MeetingAttendee> MeetingAttendees { get; set; } // MeetingAttendee
        System.Data.Entity.DbSet<MeetingSchedule> MeetingSchedules { get; set; } // MeetingSchedule
        System.Data.Entity.DbSet<NotificationMethodType> NotificationMethodTypes { get; set; } // NotificationMethodType
        System.Data.Entity.DbSet<NotificationRule> NotificationRules { get; set; } // NotificationRule
        System.Data.Entity.DbSet<RecurrenceRule> RecurrenceRules { get; set; } // RecurrenceRule
        System.Data.Entity.DbSet<User> Users { get; set; } // User

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

}
// </auto-generated>
