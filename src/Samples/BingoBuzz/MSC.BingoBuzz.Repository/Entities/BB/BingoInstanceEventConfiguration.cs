// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace MSC.BingoBuzz.Repository.Entities.BB
{

    // BingoInstanceEvent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class BingoInstanceEventConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BingoInstanceEvent>
    {
        public BingoInstanceEventConfiguration()
            : this("dbo")
        {
        }

        public BingoInstanceEventConfiguration(string schema)
        {
            ToTable("BingoInstanceEvent", schema);
            HasKey(x => x.BingoInstanceEventId);

            Property(x => x.BingoInstanceEventId).HasColumnName(@"BingoInstanceEventId").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.BingoInstanceEventTypeId).HasColumnName(@"BingoInstanceEventTypeId").HasColumnType("int").IsRequired();
            Property(x => x.BingoInstanceId).HasColumnName(@"BingoInstanceId").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.BingoInstanceContentId).HasColumnName(@"BingoInstanceContentId").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.CreatedUserId).HasColumnName(@"CreatedUserId").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.UpdatedUserId).HasColumnName(@"UpdatedUserId").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasOptional(a => a.BingoInstanceContent).WithMany(b => b.BingoInstanceEvents).HasForeignKey(c => c.BingoInstanceContentId).WillCascadeOnDelete(false); // FK_BingoInstanceEvent_BingoInstanceContent
            HasRequired(a => a.BingoInstance).WithMany(b => b.BingoInstanceEvents).HasForeignKey(c => c.BingoInstanceId).WillCascadeOnDelete(false); // FK_BingoInstanceEvent_BingoInstance
            HasRequired(a => a.BingoInstanceEventType).WithMany(b => b.BingoInstanceEvents).HasForeignKey(c => c.BingoInstanceEventTypeId).WillCascadeOnDelete(false); // FK_BingoInstanceEvent_BingoInstanceEventType
            HasRequired(a => a.CreatedUser).WithMany(b => b.BingoInstanceEvents_CreatedUserId).HasForeignKey(c => c.CreatedUserId).WillCascadeOnDelete(false); // FK_BingoInstanceEvent_User_Created
            HasRequired(a => a.UpdatedUser).WithMany(b => b.BingoInstanceEvents_UpdatedUserId).HasForeignKey(c => c.UpdatedUserId).WillCascadeOnDelete(false); // FK_BingoInstanceEvent_User_Updated
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
