// <auto-generated> - Template:WebApiControllerPartialMethods, Version:1.1, Id:54f0612b-5235-437d-af2d-0b75efa68630
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using entBB = CodeGenHero.BingoBuzz.Repository.Entities.BB;

namespace CodeGenHero.BingoBuzz.API.Controllers.BB
{
	public partial class BingoInstanceContentsBBController : BBBaseApiController
	{

        ///// <summary>
        ///// A sample implementation of custom logic used to either manipulate a DTO item or include related entities.
        ///// </summary>
        ///// <param name="dbItem"></param>
        ///// <param name="id"></param>
        ///// <param name="numChildLevels"></param>
        // partial void RunCustomLogicOnGetEntityByPK(ref entBB.BingoInstanceContent dbItem, System.Guid bingoInstanceContentId, int numChildLevels)
        // {
        // if (numChildLevels > 1)
        // {
        // int[] orderLineItemIds = dbItem.OrderLineItems.Select(x => x.OrderLineItemId).ToArray();

        // var lineItemDiscounts = Repo.BBDataContext.OrderLineItemDiscounts.Where(x => orderLineItemIds.Contains(x.OrderLineItemId)).ToList();

        // foreach (var lineItemDiscount in lineItemDiscounts)
        // { // Find the match and add the item to it.
        // var orderLineItem = dbItem.OrderLineItems.Where(x => x.OrderLineItemId == lineItemDiscount.OrderLineItemId).FirstOrDefault();

        // if (orderLineItem == null)
        // {
        // throw new System.Data.Entity.Core.ObjectNotFoundException($"Unable to locate matching OrderLineItem record for {lineItemDiscount.OrderLineItemId}."
        // }

        // orderLineItem.LineItemDiscounts.Add(lineItemDiscount);
        // }
        // }

        // }

        /// <summary>
        /// Including the events
        /// </summary>
        /// <param name="dbItems"></param>
        /// <param name="filterList"></param>
        partial void RunCustomLogicAfterGetQueryableList(ref IQueryable<entBB.BingoInstanceContent> dbItems, ref List<string> filterList)
        {
            dbItems = dbItems.Include(x => x.BingoInstanceEvents);
        }
    }
}
