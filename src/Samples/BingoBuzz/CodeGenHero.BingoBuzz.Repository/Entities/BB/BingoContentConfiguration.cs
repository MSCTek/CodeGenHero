// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CodeGenHero.BingoBuzz.Repository.Entities.BB
{

    // BingoContent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class BingoContentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BingoContent>
    {
        public BingoContentConfiguration()
            : this("dbo")
        {
        }

        public BingoContentConfiguration(string schema)
        {
            ToTable("BingoContent", schema);
            HasKey(x => x.BingoContentId);

            Property(x => x.BingoContentId).HasColumnName(@"BingoContentId").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Content).HasColumnName(@"Content").HasColumnType("nvarchar").IsRequired().HasMaxLength(250);
            Property(x => x.FreeSquareIndicator).HasColumnName(@"FreeSquareIndicator").HasColumnType("bit").IsRequired();
            Property(x => x.NumberOfUpvotes).HasColumnName(@"NumberOfUpvotes").HasColumnType("int").IsRequired();
            Property(x => x.NumberOfDownvotes).HasColumnName(@"NumberOfDownvotes").HasColumnType("int").IsRequired();
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.CreatedUserId).HasColumnName(@"CreatedUserId").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.UpdatedDate).HasColumnName(@"UpdatedDate").HasColumnType("datetime2").IsRequired();
            Property(x => x.UpdatedUserId).HasColumnName(@"UpdatedUserId").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.CreatedUser).WithMany(b => b.CreatedUser).HasForeignKey(c => c.CreatedUserId).WillCascadeOnDelete(false); // FK_BingoContent_User_CreatedUserId
            HasRequired(a => a.UpdatedUser).WithMany(b => b.BingoContents_UpdatedUserId).HasForeignKey(c => c.UpdatedUserId).WillCascadeOnDelete(false); // FK_BingoContent_User_UpdatedUserId
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
