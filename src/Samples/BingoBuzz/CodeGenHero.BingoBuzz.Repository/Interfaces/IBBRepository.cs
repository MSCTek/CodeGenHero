// <auto-generated> - Template:RepositoryInterface, Version:1.0, Id:f766650e-5c46-4239-b6fd-0cfca2673207
using CodeGenHero.Repository;
using CodeGenHero.BingoBuzz.Repository.Entities.BB;
using System;

namespace CodeGenHero.BingoBuzz.Repository.Interface
{
	public partial interface IBBRepository : IBBRepositoryCrud
	{

		BBDataContext BBDataContext { get; }

		#region DeleteEntity

		RepositoryActionResult<BingoContent> DeleteBingoContent(System.Guid bingoContentId);

		RepositoryActionResult<BingoInstance> DeleteBingoInstance(System.Guid bingoInstanceId);

		RepositoryActionResult<BingoInstanceContent> DeleteBingoInstanceContent(System.Guid bingoInstanceContentId);

		RepositoryActionResult<BingoInstanceEvent> DeleteBingoInstanceEvent(System.Guid bingoInstanceEventId);

		RepositoryActionResult<BingoInstanceEventType> DeleteBingoInstanceEventType(int bingoInstanceEventTypeId);

		RepositoryActionResult<BingoInstanceStatusType> DeleteBingoInstanceStatusType(int bingoInstanceStatusTypeId);

		RepositoryActionResult<Company> DeleteCompany(System.Guid companyId);

		RepositoryActionResult<FrequencyType> DeleteFrequencyType(int frequencyTypeId);

		RepositoryActionResult<Meeting> DeleteMeeting(System.Guid meetingId);

		RepositoryActionResult<MeetingAttendee> DeleteMeetingAttendee(System.Guid meetingAttendeeId);

		RepositoryActionResult<MeetingSchedule> DeleteMeetingSchedule(System.Guid meetingScheduleId);

		RepositoryActionResult<NotificationMethodType> DeleteNotificationMethodType(int notificationMethodTypeId);

		RepositoryActionResult<NotificationRule> DeleteNotificationRule(System.Guid notificationRuleId);

		RepositoryActionResult<RecurrenceRule> DeleteRecurrenceRule(System.Guid recurrenceRuleId);

		RepositoryActionResult<User> DeleteUser(System.Guid userId);


		#endregion DeleteEntity

		#region FirstOrDefault

		BingoContent GetBingoContent(System.Guid bingoContentId);

		BingoInstance GetBingoInstance(System.Guid bingoInstanceId);

		BingoInstanceContent GetBingoInstanceContent(System.Guid bingoInstanceContentId);

		BingoInstanceEvent GetBingoInstanceEvent(System.Guid bingoInstanceEventId);

		BingoInstanceEventType GetBingoInstanceEventType(int bingoInstanceEventTypeId);

		BingoInstanceStatusType GetBingoInstanceStatusType(int bingoInstanceStatusTypeId);

		Company GetCompany(System.Guid companyId);

		FrequencyType GetFrequencyType(int frequencyTypeId);

		Meeting GetMeeting(System.Guid meetingId);

		MeetingAttendee GetMeetingAttendee(System.Guid meetingAttendeeId);

		MeetingSchedule GetMeetingSchedule(System.Guid meetingScheduleId);

		NotificationMethodType GetNotificationMethodType(int notificationMethodTypeId);

		NotificationRule GetNotificationRule(System.Guid notificationRuleId);

		RecurrenceRule GetRecurrenceRule(System.Guid recurrenceRuleId);

		User GetUser(System.Guid userId);


		#endregion FirstOrDefault

	}
}
