// <auto-generated> - Template:ModelsBackedByDto, Version:1.0, Id:4d03f2c7-de26-4abe-a267-cad747c9606a
using CodeGenHero.Logging;
using CodeGenHero.DataService;
using System;
using System.Collections.Generic;
using System.Linq;
using CodeGenHero.BingoBuzz.API.Client.Interface;
using CodeGenHero.BingoBuzz.Model.BB.Interface;
using xDTO = CodeGenHero.BingoBuzz.DTO.BB;

namespace CodeGenHero.BingoBuzz.Model.BB
{

	public class LoadRequestCompany : EventArgs
	{
		public LoadRequestCompany(string propertyNameRequestingLoad)
		{
			PropertyNameRequestingLoad = propertyNameRequestingLoad;
		}

		public string PropertyNameRequestingLoad { get; set; }
	}


	public partial class Company : BaseModel<IWebApiDataServiceBB>, ICompany
	{
		public event EventHandler<LoadRequestCompany> OnLazyLoadRequest = delegate { }; // Empty delegate. Thus we are sure that value is always != null because no one outside of the class can change it.
		private xDTO.Company _dto = null;

		public Company(ILoggingService log, IDataService<IWebApiDataServiceBB> dataService) : base(log, dataService)
		{
			_dto = new xDTO.Company();
			OnLazyLoadRequest += HandleLazyLoadRequestAsync;
		}

		public Company(ILoggingService log, IDataService<IWebApiDataServiceBB> dataService, xDTO.Company dto) : this(log, dataService)
		{
			_dto = dto;
		}


		public virtual string Address1 { get { return _dto.Address1; } }
		public virtual string Address2 { get { return _dto.Address2; } }
		public virtual string City { get { return _dto.City; } }
		public virtual string CodeName { get { return _dto.CodeName; } }
		public virtual System.Guid CompanyId { get { return _dto.CompanyId; } }
		public virtual System.DateTime CreatedDate { get { return _dto.CreatedDate; } }
		public virtual System.Guid CreatedUserId { get { return _dto.CreatedUserId; } }
		public virtual bool IsDeleted { get { return _dto.IsDeleted; } }
		public virtual string Name { get { return _dto.Name; } }
		public virtual string State { get { return _dto.State; } }
		public virtual System.DateTime UpdatedDate { get { return _dto.UpdatedDate; } }
		public virtual System.Guid UpdatedUserId { get { return _dto.UpdatedUserId; } }
		public virtual string WebsiteUrl { get { return _dto.WebsiteUrl; } }
		public virtual string Zip { get { return _dto.Zip; } }

		private IUser _createdUser = null; // Foreign Key
		private IUser _updatedUser = null; // Foreign Key
		private List<IMeeting> _meetings = null; // Reverse Navigation


		public virtual IUser CreatedUser
		{
			get
			{
				if (_createdUser == null)
				{
					_createdUser = new User(Log, DataService, _dto.CreatedUser);
				}

				return _createdUser;
			}
		}

		public virtual IUser UpdatedUser
		{
			get
			{
				if (_updatedUser == null)
				{
					_updatedUser = new User(Log, DataService, _dto.UpdatedUser);
				}

				return _updatedUser;
			}
		}

		public virtual List<IMeeting> Meetings
		{
			get
			{
				if (_meetings == null)
				{
					OnLazyLoadRequest(this, new LoadRequestCompany(nameof(Meetings)));
				}

				return _meetings;
			}
		}



	}
}
