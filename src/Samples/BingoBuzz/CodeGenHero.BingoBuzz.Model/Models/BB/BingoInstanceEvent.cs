// <auto-generated> - Template:ModelsBackedByDto, Version:1.0, Id:4d03f2c7-de26-4abe-a267-cad747c9606a
using CodeGenHero.Logging;
using CodeGenHero.DataService;
using System;
using System.Collections.Generic;
using System.Linq;
using CodeGenHero.BingoBuzz.API.Client.Interface;
using CodeGenHero.BingoBuzz.Model.BB.Interface;
using xDTO = CodeGenHero.BingoBuzz.DTO.BB;

namespace CodeGenHero.BingoBuzz.Model.BB
{

	public class LoadRequestBingoInstanceEvent : EventArgs
	{
		public LoadRequestBingoInstanceEvent(string propertyNameRequestingLoad)
		{
			PropertyNameRequestingLoad = propertyNameRequestingLoad;
		}

		public string PropertyNameRequestingLoad { get; set; }
	}


	public partial class BingoInstanceEvent : BaseModel<IWebApiDataServiceBB>, IBingoInstanceEvent
	{
		public event EventHandler<LoadRequestBingoInstanceEvent> OnLazyLoadRequest = delegate { }; // Empty delegate. Thus we are sure that value is always != null because no one outside of the class can change it.
		private xDTO.BingoInstanceEvent _dto = null;

		public BingoInstanceEvent(ILoggingService log, IDataService<IWebApiDataServiceBB> dataService) : base(log, dataService)
		{
			_dto = new xDTO.BingoInstanceEvent();
			OnLazyLoadRequest += HandleLazyLoadRequestAsync;
		}

		public BingoInstanceEvent(ILoggingService log, IDataService<IWebApiDataServiceBB> dataService, xDTO.BingoInstanceEvent dto) : this(log, dataService)
		{
			_dto = dto;
		}


		public virtual System.Guid? BingoInstanceContentId { get { return _dto.BingoInstanceContentId; } }
		public virtual System.Guid BingoInstanceEventId { get { return _dto.BingoInstanceEventId; } }
		public virtual int BingoInstanceEventTypeId { get { return _dto.BingoInstanceEventTypeId; } }
		public virtual System.Guid BingoInstanceId { get { return _dto.BingoInstanceId; } }
		public virtual System.DateTime CreatedDate { get { return _dto.CreatedDate; } }
		public virtual System.Guid CreatedUserId { get { return _dto.CreatedUserId; } }
		public virtual bool IsDeleted { get { return _dto.IsDeleted; } }
		public virtual System.DateTime UpdatedDate { get { return _dto.UpdatedDate; } }
		public virtual System.Guid UpdatedUserId { get { return _dto.UpdatedUserId; } }

		private IBingoInstance _bingoInstance = null; // Foreign Key
		private IBingoInstanceContent _bingoInstanceContent = null; // Foreign Key
		private IBingoInstanceEventType _bingoInstanceEventType = null; // Foreign Key
		private IUser _createdUser = null; // Foreign Key
		private IUser _updatedUser = null; // Foreign Key


		public virtual IBingoInstance BingoInstance
		{
			get
			{
				if (_bingoInstance == null)
				{
					_bingoInstance = new BingoInstance(Log, DataService, _dto.BingoInstance);
				}

				return _bingoInstance;
			}
		}

		public virtual IBingoInstanceContent BingoInstanceContent
		{
			get
			{
				if (_bingoInstanceContent == null)
				{
					_bingoInstanceContent = new BingoInstanceContent(Log, DataService, _dto.BingoInstanceContent);
				}

				return _bingoInstanceContent;
			}
		}

		public virtual IBingoInstanceEventType BingoInstanceEventType
		{
			get
			{
				if (_bingoInstanceEventType == null)
				{
					_bingoInstanceEventType = new BingoInstanceEventType(Log, DataService, _dto.BingoInstanceEventType);
				}

				return _bingoInstanceEventType;
			}
		}

		public virtual IUser CreatedUser
		{
			get
			{
				if (_createdUser == null)
				{
					_createdUser = new User(Log, DataService, _dto.CreatedUser);
				}

				return _createdUser;
			}
		}

		public virtual IUser UpdatedUser
		{
			get
			{
				if (_updatedUser == null)
				{
					_updatedUser = new User(Log, DataService, _dto.UpdatedUser);
				}

				return _updatedUser;
			}
		}



	}
}
