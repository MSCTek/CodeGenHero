// <auto-generated> - Template:ModelsBackedByDto, Version:1.0, Id:4d03f2c7-de26-4abe-a267-cad747c9606a
using CodeGenHero.Logging;
using CodeGenHero.DataService;
using System;
using System.Collections.Generic;
using System.Linq;
using CodeGenHero.BingoBuzz.API.Client.Interface;
using CodeGenHero.BingoBuzz.Model.BB.Interface;
using xDTO = CodeGenHero.BingoBuzz.DTO.BB;

namespace CodeGenHero.BingoBuzz.Model.BB
{

	public class LoadRequestMeetingSchedule : EventArgs
	{
		public LoadRequestMeetingSchedule(string propertyNameRequestingLoad)
		{
			PropertyNameRequestingLoad = propertyNameRequestingLoad;
		}

		public string PropertyNameRequestingLoad { get; set; }
	}


	public partial class MeetingSchedule : BaseModel<IWebApiDataServiceBB>, IMeetingSchedule
	{
		public event EventHandler<LoadRequestMeetingSchedule> OnLazyLoadRequest = delegate { }; // Empty delegate. Thus we are sure that value is always != null because no one outside of the class can change it.
		private xDTO.MeetingSchedule _dto = null;

		public MeetingSchedule(ILoggingService log, IDataService<IWebApiDataServiceBB> dataService) : base(log, dataService)
		{
			_dto = new xDTO.MeetingSchedule();
			OnLazyLoadRequest += HandleLazyLoadRequestAsync;
		}

		public MeetingSchedule(ILoggingService log, IDataService<IWebApiDataServiceBB> dataService, xDTO.MeetingSchedule dto) : this(log, dataService)
		{
			_dto = dto;
		}


		public virtual System.DateTime CreatedDate { get { return _dto.CreatedDate; } }
		public virtual System.Guid CreatedUserId { get { return _dto.CreatedUserId; } }
		public virtual System.DateTime? EndDate { get { return _dto.EndDate; } }
		public virtual bool IsDeleted { get { return _dto.IsDeleted; } }
		public virtual System.Guid? MeetingId { get { return _dto.MeetingId; } }
		public virtual System.Guid MeetingScheduleId { get { return _dto.MeetingScheduleId; } }
		public virtual System.Guid? RecurrenceRuleId { get { return _dto.RecurrenceRuleId; } }
		public virtual System.DateTime? StartDate { get { return _dto.StartDate; } }
		public virtual System.DateTime UpdatedDate { get { return _dto.UpdatedDate; } }
		public virtual System.Guid UpdatedUserId { get { return _dto.UpdatedUserId; } }

		private IMeeting _meeting = null; // Foreign Key
		private IRecurrenceRule _recurrenceRule = null; // Foreign Key
		private IUser _createdUser = null; // Foreign Key
		private IUser _updatedUser = null; // Foreign Key


		public virtual IMeeting Meeting
		{
			get
			{
				if (_meeting == null)
				{
					OnLazyLoadRequest(this, new LoadRequestMeetingSchedule(nameof(Meeting)));
				}

				return _meeting;
			}
		}

		public virtual IRecurrenceRule RecurrenceRule
		{
			get
			{
				if (_recurrenceRule == null)
				{
					_recurrenceRule = new RecurrenceRule(Log, DataService, _dto.RecurrenceRule);
				}

				return _recurrenceRule;
			}
		}

		public virtual IUser CreatedUser
		{
			get
			{
				if (_createdUser == null)
				{
					_createdUser = new User(Log, DataService, _dto.CreatedUser);
				}

				return _createdUser;
			}
		}

		public virtual IUser UpdatedUser
		{
			get
			{
				if (_updatedUser == null)
				{
					_updatedUser = new User(Log, DataService, _dto.UpdatedUser);
				}

				return _updatedUser;
			}
		}



	}
}
