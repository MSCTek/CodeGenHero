// <auto-generated> - Template:ModelsBackedByDto, Version:1.0, Id:4d03f2c7-de26-4abe-a267-cad747c9606a
using CodeGenHero.Logging;
using CodeGenHero.DataService;
using System;
using System.Collections.Generic;
using System.Linq;
using CodeGenHero.BingoBuzz.API.Client.Interface;
using CodeGenHero.BingoBuzz.Model.BB.Interface;
using xDTO = CodeGenHero.BingoBuzz.DTO.BB;

namespace CodeGenHero.BingoBuzz.Model.BB
{

	public class LoadRequestUser : EventArgs
	{
		public LoadRequestUser(string propertyNameRequestingLoad)
		{
			PropertyNameRequestingLoad = propertyNameRequestingLoad;
		}

		public string PropertyNameRequestingLoad { get; set; }
	}


	public partial class User : BaseModel<IWebApiDataServiceBB>, IUser
	{
		public event EventHandler<LoadRequestUser> OnLazyLoadRequest = delegate { }; // Empty delegate. Thus we are sure that value is always != null because no one outside of the class can change it.
		private xDTO.User _dto = null;

		public User(ILoggingService log, IDataService<IWebApiDataServiceBB> dataService) : base(log, dataService)
		{
			_dto = new xDTO.User();
			OnLazyLoadRequest += HandleLazyLoadRequest;
		}

		public User(ILoggingService log, IDataService<IWebApiDataServiceBB> dataService, xDTO.User dto) : this(log, dataService)
		{
			_dto = dto;
		}


		public virtual System.Guid CompanyId { get { return _dto.CompanyId; } }
		public virtual System.DateTime CreatedDate { get { return _dto.CreatedDate; } }
		public virtual System.Guid CreatedUserId { get { return _dto.CreatedUserId; } }
		public virtual string Email { get { return _dto.Email; } }
		public virtual string FirstName { get { return _dto.FirstName; } }
		public virtual bool IsDeleted { get { return _dto.IsDeleted; } }
		public virtual string LastName { get { return _dto.LastName; } }
		public virtual System.DateTime UpdatedDate { get { return _dto.UpdatedDate; } }
		public virtual System.Guid UpdatedUserId { get { return _dto.UpdatedUserId; } }
		public virtual System.Guid UserId { get { return _dto.UserId; } }

		private IUser _user_CreatedUserId = null; // Foreign Key
		private IUser _user_UpdatedUserId = null; // Foreign Key
		private List<IBingoContent> _bingoContents_UpdatedUserId = null; // Reverse Navigation
		private List<IBingoContent> _createdUser = null; // Reverse Navigation
		private List<IBingoInstance> _bingoInstances_CreatedUserId = null; // Reverse Navigation
		private List<IBingoInstance> _bingoInstances_UpdatedUserId = null; // Reverse Navigation
		private List<IBingoInstanceContent> _bingoInstanceContents_CreatedUserId = null; // Reverse Navigation
		private List<IBingoInstanceContent> _bingoInstanceContents_UpdatedUserId = null; // Reverse Navigation
		private List<IBingoInstanceContent> _bingoInstanceContents_UserId = null; // Reverse Navigation
		private List<IBingoInstanceEvent> _bingoInstanceEvents_CreatedUserId = null; // Reverse Navigation
		private List<IBingoInstanceEvent> _bingoInstanceEvents_UpdatedUserId = null; // Reverse Navigation
		private List<ICompany> _companies_CreatedUserId = null; // Reverse Navigation
		private List<ICompany> _companies_UpdatedUserId = null; // Reverse Navigation
		private List<IMeeting> _meetings_CreatedUserId = null; // Reverse Navigation
		private List<IMeeting> _meetings_UpdatedUserId = null; // Reverse Navigation
		private List<IMeetingAttendee> _meetingAttendees_CreatedUserId = null; // Reverse Navigation
		private List<IMeetingAttendee> _meetingAttendees_UpdatedUserId = null; // Reverse Navigation
		private List<IMeetingAttendee> _meetingAttendees_UserId = null; // Reverse Navigation
		private List<IMeetingSchedule> _meetingSchedules_CreatedUserId = null; // Reverse Navigation
		private List<IMeetingSchedule> _meetingSchedules_UpdatedUserId = null; // Reverse Navigation
		private List<IUser> _users_CreatedUserId = null; // Reverse Navigation
		private List<IUser> _users_UpdatedUserId = null; // Reverse Navigation


		public virtual IUser User_CreatedUserId
		{
			get
			{
				if (_user_CreatedUserId == null && _dto != null && _dto.User_CreatedUserId != null)
				{
					_user_CreatedUserId = new User(Log, DataService, _dto.User_CreatedUserId);
				}

				return _user_CreatedUserId;
			}
		}

		public virtual IUser User_UpdatedUserId
		{
			get
			{
				if (_user_UpdatedUserId == null && _dto != null && _dto.User_UpdatedUserId != null)
				{
					_user_UpdatedUserId = new User(Log, DataService, _dto.User_UpdatedUserId);
				}

				return _user_UpdatedUserId;
			}
		}

		public virtual List<IBingoContent> BingoContents_UpdatedUserId
		{
			get
			{
				if (_bingoContents_UpdatedUserId == null && _dto != null && _dto.BingoContents_UpdatedUserId != null)
				{
					_bingoContents_UpdatedUserId = new List<IBingoContent>();
					foreach (var dtoItem in _dto.BingoContents_UpdatedUserId)
					{
						_bingoContents_UpdatedUserId.Add(new BingoContent(Log, DataService, dtoItem));
					}
				}

				return _bingoContents_UpdatedUserId;
			}
		}

		public virtual List<IBingoContent> CreatedUser
		{
			get
			{
				if (_createdUser == null && _dto != null && _dto.CreatedUser != null)
				{
					_createdUser = new List<IBingoContent>();
					foreach (var dtoItem in _dto.CreatedUser)
					{
						_createdUser.Add(new BingoContent(Log, DataService, dtoItem));
					}
				}

				return _createdUser;
			}
		}

		public virtual List<IBingoInstance> BingoInstances_CreatedUserId
		{
			get
			{
				if (_bingoInstances_CreatedUserId == null && _dto != null && _dto.BingoInstances_CreatedUserId != null)
				{
					_bingoInstances_CreatedUserId = new List<IBingoInstance>();
					foreach (var dtoItem in _dto.BingoInstances_CreatedUserId)
					{
						_bingoInstances_CreatedUserId.Add(new BingoInstance(Log, DataService, dtoItem));
					}
				}

				return _bingoInstances_CreatedUserId;
			}
		}

		public virtual List<IBingoInstance> BingoInstances_UpdatedUserId
		{
			get
			{
				if (_bingoInstances_UpdatedUserId == null && _dto != null && _dto.BingoInstances_UpdatedUserId != null)
				{
					_bingoInstances_UpdatedUserId = new List<IBingoInstance>();
					foreach (var dtoItem in _dto.BingoInstances_UpdatedUserId)
					{
						_bingoInstances_UpdatedUserId.Add(new BingoInstance(Log, DataService, dtoItem));
					}
				}

				return _bingoInstances_UpdatedUserId;
			}
		}

		public virtual List<IBingoInstanceContent> BingoInstanceContents_CreatedUserId
		{
			get
			{
				if (_bingoInstanceContents_CreatedUserId == null && _dto != null && _dto.BingoInstanceContents_CreatedUserId != null)
				{
					_bingoInstanceContents_CreatedUserId = new List<IBingoInstanceContent>();
					foreach (var dtoItem in _dto.BingoInstanceContents_CreatedUserId)
					{
						_bingoInstanceContents_CreatedUserId.Add(new BingoInstanceContent(Log, DataService, dtoItem));
					}
				}

				return _bingoInstanceContents_CreatedUserId;
			}
		}

		public virtual List<IBingoInstanceContent> BingoInstanceContents_UpdatedUserId
		{
			get
			{
				if (_bingoInstanceContents_UpdatedUserId == null && _dto != null && _dto.BingoInstanceContents_UpdatedUserId != null)
				{
					_bingoInstanceContents_UpdatedUserId = new List<IBingoInstanceContent>();
					foreach (var dtoItem in _dto.BingoInstanceContents_UpdatedUserId)
					{
						_bingoInstanceContents_UpdatedUserId.Add(new BingoInstanceContent(Log, DataService, dtoItem));
					}
				}

				return _bingoInstanceContents_UpdatedUserId;
			}
		}

		public virtual List<IBingoInstanceContent> BingoInstanceContents_UserId
		{
			get
			{
				if (_bingoInstanceContents_UserId == null && _dto != null && _dto.BingoInstanceContents_UserId != null)
				{
					_bingoInstanceContents_UserId = new List<IBingoInstanceContent>();
					foreach (var dtoItem in _dto.BingoInstanceContents_UserId)
					{
						_bingoInstanceContents_UserId.Add(new BingoInstanceContent(Log, DataService, dtoItem));
					}
				}

				return _bingoInstanceContents_UserId;
			}
		}

		public virtual List<IBingoInstanceEvent> BingoInstanceEvents_CreatedUserId
		{
			get
			{
				if (_bingoInstanceEvents_CreatedUserId == null && _dto != null && _dto.BingoInstanceEvents_CreatedUserId != null)
				{
					_bingoInstanceEvents_CreatedUserId = new List<IBingoInstanceEvent>();
					foreach (var dtoItem in _dto.BingoInstanceEvents_CreatedUserId)
					{
						_bingoInstanceEvents_CreatedUserId.Add(new BingoInstanceEvent(Log, DataService, dtoItem));
					}
				}

				return _bingoInstanceEvents_CreatedUserId;
			}
		}

		public virtual List<IBingoInstanceEvent> BingoInstanceEvents_UpdatedUserId
		{
			get
			{
				if (_bingoInstanceEvents_UpdatedUserId == null && _dto != null && _dto.BingoInstanceEvents_UpdatedUserId != null)
				{
					_bingoInstanceEvents_UpdatedUserId = new List<IBingoInstanceEvent>();
					foreach (var dtoItem in _dto.BingoInstanceEvents_UpdatedUserId)
					{
						_bingoInstanceEvents_UpdatedUserId.Add(new BingoInstanceEvent(Log, DataService, dtoItem));
					}
				}

				return _bingoInstanceEvents_UpdatedUserId;
			}
		}

		public virtual List<ICompany> Companies_CreatedUserId
		{
			get
			{
				if (_companies_CreatedUserId == null && _dto != null && _dto.Companies_CreatedUserId != null)
				{
					_companies_CreatedUserId = new List<ICompany>();
					foreach (var dtoItem in _dto.Companies_CreatedUserId)
					{
						_companies_CreatedUserId.Add(new Company(Log, DataService, dtoItem));
					}
				}

				return _companies_CreatedUserId;
			}
		}

		public virtual List<ICompany> Companies_UpdatedUserId
		{
			get
			{
				if (_companies_UpdatedUserId == null && _dto != null && _dto.Companies_UpdatedUserId != null)
				{
					_companies_UpdatedUserId = new List<ICompany>();
					foreach (var dtoItem in _dto.Companies_UpdatedUserId)
					{
						_companies_UpdatedUserId.Add(new Company(Log, DataService, dtoItem));
					}
				}

				return _companies_UpdatedUserId;
			}
		}

		public virtual List<IMeeting> Meetings_CreatedUserId
		{
			get
			{
				if (_meetings_CreatedUserId == null && _dto != null && _dto.Meetings_CreatedUserId != null)
				{
					_meetings_CreatedUserId = new List<IMeeting>();
					foreach (var dtoItem in _dto.Meetings_CreatedUserId)
					{
						_meetings_CreatedUserId.Add(new Meeting(Log, DataService, dtoItem));
					}
				}

				return _meetings_CreatedUserId;
			}
		}

		public virtual List<IMeeting> Meetings_UpdatedUserId
		{
			get
			{
				if (_meetings_UpdatedUserId == null && _dto != null && _dto.Meetings_UpdatedUserId != null)
				{
					_meetings_UpdatedUserId = new List<IMeeting>();
					foreach (var dtoItem in _dto.Meetings_UpdatedUserId)
					{
						_meetings_UpdatedUserId.Add(new Meeting(Log, DataService, dtoItem));
					}
				}

				return _meetings_UpdatedUserId;
			}
		}

		public virtual List<IMeetingAttendee> MeetingAttendees_CreatedUserId
		{
			get
			{
				if (_meetingAttendees_CreatedUserId == null && _dto != null && _dto.MeetingAttendees_CreatedUserId != null)
				{
					_meetingAttendees_CreatedUserId = new List<IMeetingAttendee>();
					foreach (var dtoItem in _dto.MeetingAttendees_CreatedUserId)
					{
						_meetingAttendees_CreatedUserId.Add(new MeetingAttendee(Log, DataService, dtoItem));
					}
				}

				return _meetingAttendees_CreatedUserId;
			}
		}

		public virtual List<IMeetingAttendee> MeetingAttendees_UpdatedUserId
		{
			get
			{
				if (_meetingAttendees_UpdatedUserId == null && _dto != null && _dto.MeetingAttendees_UpdatedUserId != null)
				{
					_meetingAttendees_UpdatedUserId = new List<IMeetingAttendee>();
					foreach (var dtoItem in _dto.MeetingAttendees_UpdatedUserId)
					{
						_meetingAttendees_UpdatedUserId.Add(new MeetingAttendee(Log, DataService, dtoItem));
					}
				}

				return _meetingAttendees_UpdatedUserId;
			}
		}

		public virtual List<IMeetingAttendee> MeetingAttendees_UserId
		{
			get
			{
				if (_meetingAttendees_UserId == null && _dto != null && _dto.MeetingAttendees_UserId != null)
				{
					_meetingAttendees_UserId = new List<IMeetingAttendee>();
					foreach (var dtoItem in _dto.MeetingAttendees_UserId)
					{
						_meetingAttendees_UserId.Add(new MeetingAttendee(Log, DataService, dtoItem));
					}
				}

				return _meetingAttendees_UserId;
			}
		}

		public virtual List<IMeetingSchedule> MeetingSchedules_CreatedUserId
		{
			get
			{
				if (_meetingSchedules_CreatedUserId == null && _dto != null && _dto.MeetingSchedules_CreatedUserId != null)
				{
					_meetingSchedules_CreatedUserId = new List<IMeetingSchedule>();
					foreach (var dtoItem in _dto.MeetingSchedules_CreatedUserId)
					{
						_meetingSchedules_CreatedUserId.Add(new MeetingSchedule(Log, DataService, dtoItem));
					}
				}

				return _meetingSchedules_CreatedUserId;
			}
		}

		public virtual List<IMeetingSchedule> MeetingSchedules_UpdatedUserId
		{
			get
			{
				if (_meetingSchedules_UpdatedUserId == null && _dto != null && _dto.MeetingSchedules_UpdatedUserId != null)
				{
					_meetingSchedules_UpdatedUserId = new List<IMeetingSchedule>();
					foreach (var dtoItem in _dto.MeetingSchedules_UpdatedUserId)
					{
						_meetingSchedules_UpdatedUserId.Add(new MeetingSchedule(Log, DataService, dtoItem));
					}
				}

				return _meetingSchedules_UpdatedUserId;
			}
		}

		public virtual List<IUser> Users_CreatedUserId
		{
			get
			{
				if (_users_CreatedUserId == null && _dto != null && _dto.Users_CreatedUserId != null)
				{
					_users_CreatedUserId = new List<IUser>();
					foreach (var dtoItem in _dto.Users_CreatedUserId)
					{
						_users_CreatedUserId.Add(new User(Log, DataService, dtoItem));
					}
				}

				return _users_CreatedUserId;
			}
		}

		public virtual List<IUser> Users_UpdatedUserId
		{
			get
			{
				if (_users_UpdatedUserId == null && _dto != null && _dto.Users_UpdatedUserId != null)
				{
					_users_UpdatedUserId = new List<IUser>();
					foreach (var dtoItem in _dto.Users_UpdatedUserId)
					{
						_users_UpdatedUserId.Add(new User(Log, DataService, dtoItem));
					}
				}

				return _users_UpdatedUserId;
			}
		}



	}
}
